[{"C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\index.js":"1","C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\App.js":"2","C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\components\\Form\\Form.js":"3","C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\components\\Posts\\Posts.js":"4","C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\components\\Posts\\Post\\Post.js":"5","C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\styles.js":"6","C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\components\\Posts\\Post\\styles.js":"7","C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\components\\Posts\\styles.js":"8","C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\components\\Form\\styles.js":"9","C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\reducers\\index.js":"10","C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\actions\\posts.js":"11","C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\reducers\\posts.js":"12","C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\api\\index.js":"13","C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\constants\\actionTypes.js":"14","C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\actions\\auth.js":"15","C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\components\\Login\\Login.js":"16","C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\reducers\\error.js":"17","C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\reducers\\auth.js":"18","C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\actions\\errors.js":"19","C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\components\\Login\\Logout.js":"20","C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\routes\\AuthRoute.js":"21","C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\components\\Login\\Register.js":"22"},{"size":440,"mtime":1608814818548,"results":"23","hashOfConfig":"24"},{"size":2531,"mtime":1609668315830,"results":"25","hashOfConfig":"24"},{"size":3327,"mtime":1609667598030,"results":"26","hashOfConfig":"24"},{"size":993,"mtime":1609656270736,"results":"27","hashOfConfig":"24"},{"size":2537,"mtime":1609571557937,"results":"28","hashOfConfig":"24"},{"size":477,"mtime":1609662016395,"results":"29","hashOfConfig":"24"},{"size":1749,"mtime":1609251729089,"results":"30","hashOfConfig":"24"},{"size":278,"mtime":1608807042752,"results":"31","hashOfConfig":"24"},{"size":446,"mtime":1608813324178,"results":"32","hashOfConfig":"24"},{"size":186,"mtime":1609413085497,"results":"33","hashOfConfig":"24"},{"size":1597,"mtime":1609691216194,"results":"34","hashOfConfig":"24"},{"size":636,"mtime":1609405529036,"results":"35","hashOfConfig":"24"},{"size":703,"mtime":1609691416030,"results":"36","hashOfConfig":"24"},{"size":621,"mtime":1609409444654,"results":"37","hashOfConfig":"24"},{"size":2508,"mtime":1609691458955,"results":"38","hashOfConfig":"24"},{"size":3314,"mtime":1609668723027,"results":"39","hashOfConfig":"24"},{"size":508,"mtime":1609413375787,"results":"40","hashOfConfig":"24"},{"size":1421,"mtime":1609492746365,"results":"41","hashOfConfig":"24"},{"size":301,"mtime":1609492107976,"results":"42","hashOfConfig":"24"},{"size":743,"mtime":1609660983009,"results":"43","hashOfConfig":"24"},{"size":355,"mtime":1609575884612,"results":"44","hashOfConfig":"45"},{"size":3527,"mtime":1609668648672,"results":"46","hashOfConfig":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"j4wody",{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"49"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"49"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"49"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"49"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"49"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},"m3vtve",{"filePath":"100","messages":"101","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"49"},"C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\index.js",[],["103","104"],"C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\App.js",["105","106","107","108"],"import React, { useState, useEffect } from 'react';\r\nimport { Container, AppBar, Typography, Grow, Grid,Toolbar,Box } from '@material-ui/core';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\n\r\nimport Posts from './components/Posts/Posts';\r\nimport Form from './components/Form/Form';\r\nimport { getPosts } from './actions/posts';\r\nimport { loadUser } from './actions/auth'\r\nimport useStyles from './styles';\r\nimport memories from './images/memories.png';\r\n\r\nimport { BrowserRouter as Router, Route, Link, Switch,Redirect } from 'react-router-dom';\r\nimport Login from './components/Login/Login';\r\nimport Register from './components/Login/Register';\r\nimport { Logout } from './components/Login/Logout';\r\n\r\n\r\nconst App = (getState) => {\r\n  const [currentId, setCurrentId] = useState(0);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const token = useSelector((state) => state.auth.token);\r\n\r\n  useEffect(() => {\r\n    dispatch(getPosts(getState));\r\n  }, [currentId, dispatch]);\r\n\r\n \r\n  return(\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/register\" component={Register} />\r\n        <PrivateRoute path=\"/\" component={Homepage}  />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n\r\n  function PrivateRoute({ component: Component, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          token ? (\r\n            <Component {...props} />\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\"\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  function Homepage(){\r\n    return(<Container maxWidth=\"lg\">\r\n    <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n      <Typography className={classes.heading} variant=\"h2\" align=\"center\">Memories</Typography>\r\n      <img className={classes.image} src={memories} alt=\"icon\" height=\"60\" />\r\n      <Toolbar>\r\n        {token ? <Logout></Logout> : null}\r\n      </Toolbar>\r\n    </AppBar>\r\n    <Grow in>\r\n      <Container>\r\n        <Grid className={classes.mainContainer} container justify=\"space-between\" alignItems=\"stretch\" spacing={3}>\r\n          <Grid item xs={12} sm={7}>\r\n            <Posts setCurrentId={setCurrentId} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Form currentId={currentId} setCurrentId={setCurrentId} />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Grow>\r\n  </Container>);\r\n  }\r\n\r\n};\r\n\r\n\r\n\r\nexport default App;","C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\components\\Form\\Form.js",["109"],"import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FileBase from 'react-file-base64';\r\n\r\nimport useStyles from './styles';\r\nimport { createPost, updatePost } from '../../actions/posts';\r\nimport imageCompression from 'browser-image-compression';\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n  const authUser = useSelector((state)=>state.auth?.user);\r\n  const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: '',userId: authUser?.user.id });\r\n  const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (post) setPostData(post);\r\n  }, [post]);\r\n\r\n  const clear = () => {\r\n    setCurrentId(0);\r\n    setPostData({ creator: '', title: '', message: '', tags: '', selectedFile: '',userId: authUser?.user.id });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (currentId === 0) {\r\n      dispatch(createPost(postData));\r\n      clear();\r\n    } else {\r\n      dispatch(updatePost(currentId, postData));\r\n      clear();\r\n    }\r\n  };\r\n\r\n  const view = async (event) =>{\r\n  const imageFile = event.target.files[0];\r\n  const options = {\r\n    maxSizeMB: 0.5\r\n  }\r\n  try {\r\n    const compressedFile = await imageCompression(imageFile, options);\r\n    await imageCompression.getDataUrlFromFile(compressedFile).then((data)=>{\r\n      setPostData({ ...postData, selectedFile: data });\r\n    })\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n \r\n}\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'}</Typography>\r\n        <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\r\n        <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\r\n        <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\r\n        <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\r\n        {/* <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div> */}\r\n        <div className={classes.fileInput}><input id=\"demo\" type=\"file\" onChange={view}></input></div>\r\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Form;","C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\components\\Posts\\Posts.js",["110","111","112"],"import React,{useEffect} from 'react';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { getPosts } from '../../actions/posts';\r\nimport Post from './Post/Post';\r\nimport useStyles from './styles';\r\n\r\nconst Posts = ({ setCurrentId }) => {\r\n  //const dispatch = useDispatch();\r\n  const posts = useSelector((state) => state.posts);\r\n  \r\n  // useEffect(()=>{\r\n  //   if(!posts.length){\r\n  //     dispatch(getPosts())\r\n  //   }\r\n  // },[])\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    !posts.length ? <CircularProgress /> : (\r\n      <>\r\n      <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\r\n        {posts.map((post) => (\r\n          <Grid key={post._id} item xs={12} sm={6} md={6}>\r\n            <Post post={post} setCurrentId={setCurrentId} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>      \r\n      </>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Posts;","C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\components\\Posts\\Post\\Post.js",["113"],"import React from 'react';\r\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core/';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { likePost, deletePost } from '../../../actions/posts';\r\nimport useStyles from './styles';\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: 11,\r\n  },\r\n}))(Tooltip);\r\n\r\nconst Post = ({ post, setCurrentId }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardMedia className={classes.media} image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} title={post.title} />\r\n      <div className={classes.overlay}>\r\n        <Typography variant=\"h6\">{post.creator}</Typography>\r\n        <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\r\n      </div>\r\n      <div className={classes.overlay2}>\r\n        <Button style={{ color: 'white' }} size=\"small\" onClick={() => setCurrentId(post._id)}><MoreHorizIcon fontSize=\"default\" /></Button>\r\n      </div>\r\n      <div className={classes.details}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n      </div>\r\n      <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\r\n      <CardContent>\r\n        <LightTooltip title={post.message}>\r\n          <Typography className={classes.halfHeightCard} variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message}</Typography>\r\n        </LightTooltip>\r\n      </CardContent>\r\n      <CardActions className={classes.cardActions}>\r\n        <Button size=\"small\" color=\"primary\" onClick={() => dispatch(likePost(post._id))}><ThumbUpAltIcon fontSize=\"small\" /> Like {post.likeCount} </Button>\r\n        <Button size=\"small\" color=\"primary\" onClick={() => dispatch(deletePost(post._id))}><DeleteIcon fontSize=\"small\" /> Delete</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Post;","C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\styles.js",[],"C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\components\\Posts\\Post\\styles.js",[],"C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\components\\Posts\\styles.js",[],"C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\components\\Form\\styles.js",[],"C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\reducers\\index.js",[],"C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\actions\\posts.js",[],"C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\reducers\\posts.js",["114"],"import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\r\n\r\nexport default (posts = [],action)=>{\r\n    switch(action.type){\r\n      case FETCH_ALL:\r\n        return action.payload;\r\n      case LIKE:\r\n        return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\r\n      case CREATE:\r\n        return [...posts, action.payload];\r\n      case UPDATE:\r\n        return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\r\n      case DELETE:\r\n        return posts.filter((post) => post._id !== action.payload);\r\n    default:\r\n      return posts;  \r\n    } \r\n}","C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\api\\index.js",[],"C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\constants\\actionTypes.js",[],"C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\actions\\auth.js",["115"],"C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\components\\Login\\Login.js",["116","117","118","119","120"],"import React, { useState, useEffect } from 'react';\r\nimport { createStyles, makeStyles, theme } from '@material-ui/core/styles';\r\nimport {Link,Typography} from '@material-ui/core'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { login } from '../../actions/auth';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getPosts } from '../../actions/posts';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      width: 400,\r\n      margin: `${theme.spacing(0)} auto`\r\n    },\r\n    loginBtn: {\r\n      marginTop: theme.spacing(2),\r\n      flexGrow: 1\r\n    },\r\n    header: {\r\n      textAlign: 'center',\r\n      background: '#212121',\r\n      color: '#fff'\r\n    },\r\n    card: {\r\n      marginTop: theme.spacing(10)\r\n    },\r\n    link: {\r\n      marginLeft: theme.spacing(1)\r\n    }\r\n  })\r\n);\r\n\r\n\r\nconst Login = (error) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [msg, setMsg] = useState(null);\r\n\r\n  const handleChangeEmail = (e) => setEmail(e.target.value);\r\n  const handleChangePassword = (e) => setPassword(e.target.value);\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n  const authUser = useSelector((state)=>state.auth.user);\r\n  const history = useHistory();\r\n\r\n  useEffect(()=>{\r\n    if(isAuthenticated) {\r\n      history.push(`/`);\r\n      const userid = authUser.user.id;\r\n      dispatch(getPosts())\r\n    }\r\n  },[isAuthenticated])\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    const user = { email, password };\r\n\r\n    // Attempt to login\r\n    dispatch(login(user));\r\n    \r\n  };\r\n\r\n \r\n  return (\r\n    <form className={classes.container} noValidate autoComplete=\"off\">\r\n      <Card className={classes.card}>\r\n        <CardHeader className={classes.header} title=\"Login to your Memories!!\" />\r\n        <CardContent>\r\n          <div>\r\n            <TextField\r\n              fullWidth\r\n              id=\"email\"\r\n              type=\"email\"\r\n              label=\"Email\"\r\n              margin=\"normal\"\r\n              onChange={handleChangeEmail}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              id=\"password\"\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              margin=\"normal\"\r\n              onChange={handleChangePassword}\r\n            />\r\n          </div>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            color=\"secondary\"\r\n            className={classes.loginBtn}\r\n            onClick={handleLogin}\r\n            >\r\n            Login\r\n          </Button>\r\n        </CardActions>\r\n        <Typography variant=\"subtitle2\" className={classes.link}>Need a new account, <Link href=\"/register\">sign up</Link></Typography>\r\n      </Card>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Login;","C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\reducers\\error.js",["121"],"import { GET_ERRORS,CLEAR_ERRORS } from '../constants/actionTypes';\r\n\r\nconst INITIAL_STATE = {\r\n    msg:{},\r\n    status:null,\r\n    id:null\r\n}\r\n\r\nexport default (state=INITIAL_STATE,action)=>{\r\n    switch(action.type){\r\n        case GET_ERRORS:\r\n          return {\r\n              msg:action.payload.msg,\r\n              status:action.payload.status,\r\n              id:action.payload.id\r\n          }\r\n        case CLEAR_ERRORS:\r\n          return INITIAL_STATE;\r\n      default:\r\n        return state;  \r\n    }\r\n}","C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\reducers\\auth.js",["122"],"import { USER_LOADED,USER_LOADING,REGISTER_FAIL,REGISTER_SUCCESS,LOGIN_FAIL,LOGIN_SUCCESS,LOGOUT_SUCCESS,AUTH_ERROR } from '../constants/actionTypes';\r\n\r\nconst INITIAL_STATE={\r\n    token:localStorage.getItem('token'),\r\n    isAuthenticated:null,\r\n    isLoading:false,\r\n    user:null\r\n};\r\n\r\nexport default (state=INITIAL_STATE,action)=>{\r\n    switch(action.type){\r\n        case USER_LOADING:\r\n          return {\r\n             ...state,\r\n             isLoading:true\r\n          };\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated:true,\r\n                isLoading:false,\r\n                user:action.payload\r\n             };\r\n        case LOGIN_SUCCESS:\r\n        case REGISTER_SUCCESS:\r\n            localStorage.setItem('token',action.payload.token);\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated:true,\r\n                isLoading:false,\r\n                user:action.payload\r\n             };\r\n        case REGISTER_FAIL:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT_SUCCESS:\r\n        case AUTH_ERROR:\r\n            localStorage.removeItem('token')\r\n            return {\r\n                ...state,\r\n                token:null,\r\n                isAuthenticated:false,\r\n                isLoading:false,\r\n                user:null\r\n             };\r\n      default:\r\n        return state;  \r\n    }\r\n}","C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\actions\\errors.js",[],"C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\components\\Login\\Logout.js",["123"],"import Link from '@material-ui/core/Link';\r\nimport { useDispatch } from 'react-redux';\r\nimport { logout } from '../../actions/auth';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { IconButton,Tooltip } from '@material-ui/core';\r\n\r\n\r\nexport const Logout = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const logoutUser = () => {\r\n    dispatch(logout);\r\n  }\r\n\r\n  const noPointer = {cursor: 'pointer'};\r\n\r\n    return (\r\n      <>\r\n        {/* <Link href=\"\" onClick={logoutUser}>\r\n          Logout\r\n        </Link> */}\r\n        <Tooltip title=\"Logout from memories?\">\r\n        <IconButton style={noPointer} onClick={logoutUser}>\r\n          <ExitToAppIcon />\r\n        </IconButton>\r\n        </Tooltip>\r\n      </>\r\n    );\r\n  };","C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\routes\\AuthRoute.js",[],["124","125"],"C:\\Users\\akshay.v.deshpande\\React\\memories-app\\client\\src\\components\\Login\\Register.js",["126","127","128","129","130"],"import React, { useState, useEffect } from 'react';\r\nimport { createStyles, makeStyles, theme } from '@material-ui/core/styles';\r\nimport {Link,Typography} from '@material-ui/core'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { login } from '../../actions/auth';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getPosts } from '../../actions/posts';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      width: 400,\r\n      margin: `${theme.spacing(0)} auto`\r\n    },\r\n    loginBtn: {\r\n      marginTop: theme.spacing(2),\r\n      flexGrow: 1\r\n    },\r\n    header: {\r\n      textAlign: 'center',\r\n      background: '#212121',\r\n      color: '#fff'\r\n    },\r\n    card: {\r\n      marginTop: theme.spacing(10)\r\n    },\r\n    link: {\r\n      marginLeft: theme.spacing(1)\r\n    }\r\n  })\r\n);\r\n\r\n\r\nconst Register = (error) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [msg, setMsg] = useState(null);\r\n\r\n  const handleChangeEmail = (e) => setEmail(e.target.value);\r\n  const handleChangePassword = (e) => setPassword(e.target.value);\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n  const authUser = useSelector((state)=>state.auth.user);\r\n  const history = useHistory();\r\n\r\n  useEffect(()=>{\r\n    if(isAuthenticated) {\r\n      history.push(`/`);\r\n      const userid = authUser.user.id;\r\n      dispatch(getPosts())\r\n    }\r\n  },[isAuthenticated])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const user = { email, password };\r\n\r\n    // Attempt to login\r\n    dispatch(login(user));\r\n    \r\n  };\r\n\r\n \r\n  return (\r\n    <form className={classes.container} noValidate autoComplete=\"off\">\r\n      <Card className={classes.card}>\r\n        <CardHeader className={classes.header} title=\"Register\" />\r\n        <CardContent>\r\n          <div>\r\n          <TextField\r\n              fullWidth\r\n              id=\"name\"\r\n              type=\"name\"\r\n              label=\"Name\"\r\n              margin=\"normal\"\r\n              onChange={handleChangeEmail}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              id=\"email\"\r\n              type=\"email\"\r\n              label=\"Email\"\r\n              margin=\"normal\"\r\n              onChange={handleChangeEmail}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              id=\"password\"\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              margin=\"normal\"\r\n              onChange={handleChangePassword}\r\n            />\r\n          </div>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            color=\"secondary\"\r\n            className={classes.loginBtn}\r\n            onClick={handleSubmit}\r\n            >\r\n            Register\r\n          </Button>\r\n        </CardActions>\r\n        <Typography variant=\"subtitle2\" className={classes.link}>Already have an account, <Link href=\"/login\">login</Link></Typography>\r\n      </Card>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Register;",{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":2,"column":60,"nodeType":"137","messageId":"138","endLine":2,"endColumn":63},{"ruleId":"135","severity":1,"message":"139","line":8,"column":10,"nodeType":"137","messageId":"138","endLine":8,"endColumn":18},{"ruleId":"135","severity":1,"message":"140","line":12,"column":42,"nodeType":"137","messageId":"138","endLine":12,"endColumn":46},{"ruleId":"141","severity":1,"message":"142","line":26,"column":6,"nodeType":"143","endLine":26,"endColumn":27,"suggestions":"144"},{"ruleId":"135","severity":1,"message":"145","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":16},{"ruleId":"135","severity":1,"message":"146","line":1,"column":15,"nodeType":"137","messageId":"138","endLine":1,"endColumn":24},{"ruleId":"135","severity":1,"message":"147","line":4,"column":10,"nodeType":"137","messageId":"138","endLine":4,"endColumn":21},{"ruleId":"135","severity":1,"message":"148","line":6,"column":10,"nodeType":"137","messageId":"138","endLine":6,"endColumn":18},{"ruleId":"135","severity":1,"message":"149","line":8,"column":22,"nodeType":"137","messageId":"138","endLine":8,"endColumn":32},{"ruleId":"150","severity":1,"message":"151","line":3,"column":1,"nodeType":"152","endLine":18,"endColumn":2},{"ruleId":"153","severity":1,"message":"154","line":12,"column":35,"nodeType":"155","messageId":"156","endLine":12,"endColumn":36,"fix":"157"},{"ruleId":"135","severity":1,"message":"158","line":2,"column":36,"nodeType":"137","messageId":"138","endLine":2,"endColumn":41},{"ruleId":"135","severity":1,"message":"159","line":48,"column":10,"nodeType":"137","messageId":"138","endLine":48,"endColumn":13},{"ruleId":"135","severity":1,"message":"160","line":48,"column":15,"nodeType":"137","messageId":"138","endLine":48,"endColumn":21},{"ruleId":"135","severity":1,"message":"161","line":59,"column":13,"nodeType":"137","messageId":"138","endLine":59,"endColumn":19},{"ruleId":"141","severity":1,"message":"162","line":62,"column":5,"nodeType":"143","endLine":62,"endColumn":22,"suggestions":"163"},{"ruleId":"150","severity":1,"message":"151","line":9,"column":1,"nodeType":"152","endLine":22,"endColumn":2},{"ruleId":"150","severity":1,"message":"151","line":10,"column":1,"nodeType":"152","endLine":49,"endColumn":2},{"ruleId":"135","severity":1,"message":"140","line":1,"column":8,"nodeType":"137","messageId":"138","endLine":1,"endColumn":12},{"ruleId":"131","replacedBy":"164"},{"ruleId":"133","replacedBy":"165"},{"ruleId":"135","severity":1,"message":"158","line":2,"column":36,"nodeType":"137","messageId":"138","endLine":2,"endColumn":41},{"ruleId":"135","severity":1,"message":"159","line":48,"column":10,"nodeType":"137","messageId":"138","endLine":48,"endColumn":13},{"ruleId":"135","severity":1,"message":"160","line":48,"column":15,"nodeType":"137","messageId":"138","endLine":48,"endColumn":21},{"ruleId":"135","severity":1,"message":"161","line":59,"column":13,"nodeType":"137","messageId":"138","endLine":59,"endColumn":19},{"ruleId":"141","severity":1,"message":"162","line":62,"column":5,"nodeType":"143","endLine":62,"endColumn":22,"suggestions":"166"},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'loadUser' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getState'. Either include it or remove the dependency array.","ArrayExpression",["169"],"'FileBase' is defined but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'getPosts' is defined but never used.","'makeStyles' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"170","text":"171"},"'theme' is defined but never used.","'msg' is assigned a value but never used.","'setMsg' is assigned a value but never used.","'userid' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'authUser.user.id', 'dispatch', and 'history'. Either include them or remove the dependency array.",["172"],["167"],["168"],["173"],"no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},[480,493],"\r\n          .",{"desc":"176","fix":"177"},{"desc":"176","fix":"178"},"Update the dependencies array to be: [currentId, dispatch, getState]",{"range":"179","text":"180"},"Update the dependencies array to be: [authUser.user.id, dispatch, history, isAuthenticated]",{"range":"181","text":"182"},{"range":"183","text":"182"},[982,1003],"[currentId, dispatch, getState]",[1890,1907],"[authUser.user.id, dispatch, history, isAuthenticated]",[1893,1910]]